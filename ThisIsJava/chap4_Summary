조건문과 반복문

1. 코드 실행 흐름 제어

	- 자바 프로그램은 main() 메소드의 위에서부터 아래로 실행하는 흐름을 가짐
	- 이 흐름을 개발자가 원하는 방향으로 바꿀 수 있도록 해주는 것이 흐름 제어문
	- 조건문과 반복문
	
2. 조건문(if문, switch문)

	2.1 if문
	
		- 조건식의 결과에 따라 블록 실행 여부가 결정
			if (조건식) {
				실행문;
				실행문;
			}
	
	2.2 if-else문
	
		- 조건식이 true면 if 블록, false면 else 블록 실행
			if (조건식) {
				실행문;
			} else {
				실행문;
			}
			
	2.3 if-else if-else문
		
		- 조건문이 여러 개인 if문
			if (조건문) {
				실행문;
			} else if (조건문) {
				실행문;
			} else {
				실행문;
			}
			
	2.4 중첩 if문
	
		- if문의 블록 내에 if문 사용
			if (조건문) {
				if (조건문) {
					실행문;
				} else {
					실행문;
				}
				실행문;
			} else {
				실행문;
			}
			
	2.5 switch문
	
		- 변수 값에 따라 실행문이 선택
			switch (변수) {
				case 값1 :
					실행문;
					break;
				case 값2 :
					실행문;
					break;
				case 값3 :
					실행문;
					break;
				default :
					실행문;
					break;
			}
		- break;가 없으면 조건을 만족하는 case 아래쪽의 모든 case가 실행됨
		
3. 반복문(for문, while문, do-while문)

	3.1 for문
	
		- 초기화, 조건, 증감식의 구조
			for(초기화식; 조건식; 증감식 ) {
				실행문;
			}
			
	3.2 while문
	
		- 조건식만 존재
			while(조건식) {
				실행문;
			}
			
	3.3 do-while문
	
		- 실행문 우선 실행시키고 조건을 비교
			do {
				실행문;
			} while(조건식);
			
	3.4 break문
	
		- 반복문을 실행 중지할 때 사용
		- 반복문이 중첩되어 있을 경우 가장 가까운 반복문만 종료
		- 바깥쪽 반복문까지 종료시키려면 바깥쪽 반복문에 이름(라벨)을 붙이고, break 이름; 을 사용하면 됨
		
	3.5 continue문
	
		- 블록 내부에서 continue문이 실행되면 for 문의 증감식 또는 while문, do-while문의 조건식으로 이동
		
----------------------------------------------------------------------------------------------------------------------------------------

확인 문제

1. 조건문과 반복문의 종류를 작성하세요.

	1) 조건문 :
	2) 반복문 :
	
2. 조건문과 반복문을 설명한 것 중 틀린 것은 무엇입니까?

	1) if문은 조건식의 결과에 따라 실행 흐름을 달리할 수 있다.
	2) switch문에서 사용할 수 있는 변수의 타입은 int, double이 될 수 있다.
	3) for문은 카운터 변수로 지정한 횟수만큼 반복시킬 때 사용할 수 있다.
	4) break문은 switch문, for문, while문을 종료할 때 사용할 수 있다.
	
3. for문을 이용해서 1부터 100까지의 정수 중에서 3의 배수의 총합을 구하는 코드를 작성해보세요.

	Exercise03.java
	--------------------------------------------
	public class Exercise03 {
		public static void main(String[] args) {
			//작성 위치
		}
	}

4. while문과 Math.random() 메소드를 이용해서 두 개의 주사위를 던졌을 때 나오는 눈을 (눈1, 눈2) 형태로 출력하고,
      눈의 합이 5가 아니면 계속 주사위를 던지고, 눈의 합이 5이면 실행을 멈추는 코드를 작성해보세요.
      
	Exercise04.java
	--------------------------------------------
	public class Exercise04 {
		public static void main(String[] args) {
			//작성 위치
		}
	}
	
5. 중첩 for문을 이용하여 방정식 4x + 5y = 60의 모든 해를 구해서 (x, y) 형태로 출력해보세요. 단, x와 y는 10 이하의 자연수입니다.

	Exercise05.java
	--------------------------------------------
	public class Exercise05 {
		public static void main(String[] args) {
			//작성 위치
		}
	}

6. for문을 이용해서 실행 결과와 같은 삼각형을 출력하는 코드를 작성해보세요.

	Exercise06.java
	--------------------------------------------
	public class Exercise06 {
		public static void main(String[] args) {
			//작성 위치
		}
	}
	
	실행결과
	-----------------
	*
	**
	***
	****
	*****
	
7. while문과 Scanner를 이용해서 키보드로부터 입력된 데이터로 예금, 출금, 조회, 종료 기능을 제공하는 코드를 작성해보세요.
   이 프로그램을 실행시키면 다음과 같은 실행 결과가 나와야 합니다.
   
   	Exercise07.java
	--------------------------------------------
	import.java.util.Scanner;

	public class Exercise07 {
		public static void main(String[] args) {
			boolean run = true;
			
			int balance = 0;
			
			Scanner scanner = new Scanner(System.in);
			
			while (run) {
				System.out.println("---------------------------");
				System.out.println("1.예금 | 2.출금 | 3.잔고 | 4.종료");
				System.out.println("---------------------------");
				System.out.print("선택 > ");
				
				//작성 위치
			}
	
			System.out.println("프로그램 종료");
		}
	}
	
	실행결과
	------------------------------------------------
	----------------------------
	1.예금 | 2.출금 | 3.잔고 | 4.종료
	----------------------------
	선택 > 1
	예금액 > 10000
	----------------------------
	1.예금 | 2.출금 | 3.잔고 | 4.종료
	----------------------------
	선택 > 2
	출금액 > 8000
	----------------------------
	1.예금 | 2.출금 | 3.잔고 | 4.종료
	----------------------------
	선택 > 3
	잔고 > 2000
	----------------------------
	1.예금 | 2.출금 | 3.잔고 | 4.종료
	----------------------------
	선택 > 4
	프로그램 종료
	
----------------------------------------------------------------------------------------------------------------------------------------

확인 문제 정답

1.	1) if, switch
	2) for, while, do-while
2. 2)
3. 
	public class Exercise03 {
		public static void main(String[] args) {
			int sum = 0;
			for(int i=1; i<=100; i++) {
				if(i%3 == 0) {
					sum += i;
				}
			}
			System.out.println("3의 배수의 합: " + sum);
		}
	}

4.	
	public class Exercise04 {
		public static void main(String[] args) {
			while(true) {
				int num1 = (int)(Math.random()*6) + 1;
				int num2 = (int)(Math.random()*6) + 1;
				System.out.println("(" + num1 + ", " + num2 + ")");
				if( (num1+num2) == 5) {
					break;
				}
			}
		}
	}

5.
	public class Exercise05 {
		public static void main(String[] args) {
			for(int x=1; x<=10; x++) {
				for(int y=1; y<=10; y++) {
					if( (4*x + 5*y) == 60) {
						System.out.println("(" + x + ", " + y + ")");
					}
				}
			}
		}
	}

6.
	public class Exercise06 {
		public static void main(String[] args) {
			for(int i=1; i<=5; i++) {
				for(int j=1; j<=i; j++) {
					System.out.print("*");
					if(j==i) {
						System.out.println();
					}
				}
			}
		}
	}
	
7.
	import java.util.Scanner;

	public class  Exercise07 {
		public static void main(String[] args) {
			boolean run = true;		
			
			int balance = 0;
			
			Scanner scanner = new Scanner(System.in);
			
			while(run) {
				System.out.println("-------------------------------------");
				System.out.println("1.예금 | 2.출금 | 3.잔고 | 4.종료");
				System.out.println("-------------------------------------");
				System.out.print("선택> ");
				
				int menuNum = scanner.nextInt();
				
				switch(menuNum) {
					case 1:
						System.out.print("예금액>");
						balance += scanner.nextInt();
						break;
					case 2:
						System.out.print("출금액>");
						balance -= scanner.nextInt();
						break;
					case 3:
						System.out.print("잔고>");
						System.out.println(balance);
						break;
					case 4:
						run = false;
						break;	
				} 
				
				System.out.println();			
			}	
			
			System.out.println("프로그램 종료");
		}
	}