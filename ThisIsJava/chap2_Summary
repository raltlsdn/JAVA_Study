변수와 타입

1. 변수

	1.1 변수란?
	
		- 변수(Variable) : 하나의 값을 저장할 수 있는 메모리의 공간
		- 한 가지 타입의 값만 저장 가능
			정수 타입 변수에는 정수값만
			실수 타입 변수에는 실수값만
			
	1.2 변수의 선언
	
		- 변수를 사용하기 위해서는 먼저 변수를 선언해야 함
		- 변수 선언은 타입과 이름을 결정
		
			int age;		- 정수(int)값을 저장할 수 있는 age 변수 선언
			double value;	- 실수(double)값을 저장할 수 있는 value 변수 선언
			
		- 같은 타입의 변수는 콤마(,)를 이용해서 한 번에 선언 가능
		
			int x, y, z;
			
		- 변수 이름은 메모리 주소에 붙여진 이름
		- 프로그램은 변수 이름을 통해서 메모리 주소에 접근
		
		- 변수 명명 규칙
		
			첫 글자는 문자이거나 $, _ 이어야 하고, 숫자로 시작할 수 없다.
			영어 대소문자가 구분된다.
			첫 문자는 영어 소문자로 시작하되, 다른 단어가 붙을 경우 첫 문자를 대문자로 한다.(관례)
			문자 수의 제한은 없다.
			자바 예약어는 사용할 수 없다.
			
		- 자바 예약어
		
			기본 데이터 타입		boolean, byte, char, short, int, long, float, double
			접근 지정자			private, protected, public
			클래스와 관련된 것		class, abstract, interface, extends, implements, enum
			객체와 관련된 것		new, instanceof, this, super, null
			메소드와 관련된 것		void, return
			제어문과 관련된 것		if, else, switch, case, default, for, do, while, break, continue
			논리값			true, false
			예외 처리와 관련된 것	try, catch, finally, throw, throws
			기타				transient, volatile, package, import, synchronized, native, final, static, strictfp, assert
			
		- 변수가 어떤 값을 저장하고 있는지 쉽게 알 수 있도록 의미 있는 변수 이름을 지어주는 것이 좋음
		- 한글은 포함하지 않는 것이 좋음
		
	1.3 변수의 사용
	
		- 변수값 저장
		
			대입 연산자(=)를 사용
			
			int score;			- 변수 선언
			score = 90;			- 값 저장
			
			int score = 90;		- 변수 선언과 초기값 동시 지정
			
		- 소스 코드 내에서 변수에 직접 입력된 값을 리터럴(literal) 이라고 함
		- 값의 종류에 따라 정수 리터럴, 실수 리터럴, 문자 리터럴, 논리 리터럴로 구분	
		
		- 정수 리터럴
			
			소수점이 없는 정수 리터럴은 10진수로 간주
			0, 75, -100
			
			0으로 시작되는 리터럴은 8진수로 간주
			02, -04
			
			0x 또는 0X 로 시작하고 0~9 숫자나 A, B, C, D, E, F 또는 a, b, c, d, e, f로 구성된 리터럴은 16진수로 간주
			0x5, 0xA, 0xB3, 0xAC08
			
			정수 리터럴을 저장할 수 있는 타입은
				byte, char, short, int, long
				
		- 실수 리터럴
		
			소수점이 있는 리터럴은 10진수 실수로 간주
			0.25, -3.14
			
			대문자 E 또는 소문자 e 가 있는 리터럴은 10진수 지수와 가수로 간주
			5E7, 0.12E-5
			
			실수 리터럴을 저장할 수 있는 타입은 
				float, double
				
		- 문자 리터럴
		
			작은 따옴표(')로 묶은 텍스트는 하나의 문자 리터럴로 간주
			'A', '한', '\t', '\n'
			
			역슬래쉬(\)가 붙은 문자 리터럴은 이스케이프(escape) 문자라고도 하는데, 다음과 같이 특수한 용도로 사용함
			
				문자			용도						유니코드
			-------------------------------------------------------------------------
				\t			수평탭		 			0x0009
				\n			줄바꿈					0x000a
				\r			리턴						0x000d
				\"			큰따옴표					0x0022
				\'			작은따옴표					0x0027
				\\			\						0x005c
				\u16진수		16진수에 해당하는 유니코드		0x0000 ~ 0xffff
				
		- 문자열 리터럴
		
			큰 따옴표(")로 묶은 텍스트는 문자열 리터럴로 간주
			큰 따옴표 안에는 텍스트가 없어도 문자열 리터럴로 간주
			문자열 리터럴 내부에서도 이스케이프 문자 사용 가능
			"대한민국"
			"탭 만큼 이동 \t 합니다."
			"한줄 내려 쓰기 \n 합니다."
			
			문자열 리터럴을 지정할 수 있는 타입은
				String
				
		- 논리 리터럴
		
			true와 false는 논리 리터럴로 간주
			true, false
			
			논리 리터럴을 지정할 수 있는 타입은
				boolean
				
		- 변수값 읽기
			변수는 초기화가 되어야 읽을 수 있음
			
			int value;
			int result = value + 10;	- 변수 value가 선언되었지만, 초기화가 되지 않아서 사용할 수 없음
			
			int value = 30;
			int result = value + 10;	- 변수 value의 초기값이 선언되어 사용 가능
			
	1.4 변수의 사용 범위
	
		- 변수는 중괄호 {} 블록 내에서 선언되고 사용됨
		- 변수는 선언된 블록 내에서만 사용 가능
		- 변수가 어떤 범위에서 사용될 것인지를 생각하고, 선언 위치를 결정해야 함
		
2. 데이터 타입

	2.1 기본(원시: primitive) 타입
	
		- 기본 타입이란 정수, 실수, 문자, 논리 리터럴을 직접 저장하는 타입을 말함
		
			값의 종류		기본 타입		메모리 사용 크기		
		-------------------------------------------------------	
			정수			byte		1 byte	| 8  bit
						char		2 byte	| 16 bit
						short		2 byte	| 16 bit
						int			4 byte	| 32 bit
						long		8 byte	| 64 bit
			-----------------------------------------
			실수			float		4 byte	| 32 bit
						double		8 byte	| 64 bit
			-----------------------------------------
			논리			boolean		1 byte	| 8  bit		
		
		- 실행 중에 저장할 수 있는 값의 범위를 초과하면 최소값부터 다시 반복 저장됨(쓰레기값)
				
	2.2 정수 타입
	
		- byte 타입
			색상 정보 및 파일 또는 이미지 등의 이진(바이너리) 데이터를 처리할 때 주고 사용
			
		- char 타입
			유니코드는 2byte 크기를 가진 정수값이기 때문에 하나의 유니코드를 처리하기 위해  2byte 크기의 char 타입 제공
			
			문자열을 저장하려면 String 타입을 사용해야 하는데 String은 기본 타입이 아님
			String은 클래스 타입으로, String 변수는 참조 변수
			
			문자열을 String 변수에 대입하면 String 객체가 생성되고, String 변수는 String 객체의 번지를 참조하게 됨
			
		- short 타입
			2byte로 표현되는 정수값을 저장할 수 있는 데이터 타입
			C 언어와의 호환성을 위해 사용
			
		- int 타입
			4byte로 표현되는 정수값을 저장할 수 있는 데티어 타입
			정수 연산을 위한 기본 타입
				byte 타입 또는 short 타입의 변수를 연산하면 int 타입으로 변환된 후 연산되고 결과도 int 타입이 됨
				따라서 byte 타입이나 short 타입으로 변수를 선언한 것과 int 타입으로 선언한 것의 성능 차이는 거의 없음
			
				int number = 10;		- 10진수
				int octNumber = 012;	- 8진수
				int hexNumber = 0xA;	- 16진수
				
		- long 타입
			8byte로 표현되는 정수값을 저장할 수 있는 데이터 타입
			수치가 큰 데이터를 다루는 프로그램(대표적으로 은행 및 우주와 관련된 프로그램들)에서 사용
			
			int 타입을 넘는 정수 리터럴은 long 타입이라는 것을 컴파일러에게 알려주어야 함
			소문자 l 이나 대문자 L 을 붙여야 함(1과 구별을 위해 주로 대문자 사용)
			
				long var1 = 10;					
				long var2 = 20L;
				long var3 = 1000000000000;			- 컴파일 에러
				long var4 = 1000000000000L;
				
	2.3 실수 타입
	
		- 메모리 사용 크기에 따라 float과 double이 있음
			부동소수점 방식으로 저장
			부호 가수 * 지수 형태
		
		- float : 4byte
		- double : 8byte
		
		- 실수 리터럴 기본 타입을 double로 간주
		- float 타입은 long 타입처럼 끝에 f나 F를 붙여야 함
			double var1 = 3.14;
			float var2 = 3.14;		- 컴파일 에러
			float var3 = 3.14F;
			
	2.4 논리 타입
		
		- boolean 타입은 1byte로 표현되는 논리값(true/false)을 저장할 수 있는 데이터 타입
		
3. 타입 변환

	데이터 타입을 다른 데이터 타입으로 변환하는 것을 말함
	
	3.1 자동 타입 변환
		
		- 프로그램 실행 중에 자동적으로 타입 변환이 일어나는 것을 말함
			작은 크기를 가지는 타입이 큰 크기를 가지는 타입에 저장될 때 발생(메모리 크기)
			변환 이전의 값은 변환 이후에됴 손실 없이 그대로 보존됨
			
			
		- char는 2byte 크기지만 음수를 가질 수 없어서 byte 타입을 char 타입으로 자동 변환 시킬 수 없음
		
	3.2 강제 타입 변환
	
		- 큰 데이터 타입을 작은 데이터 타입으로 쪼개어서 저장하는 것을 강제 타입 변환(캐스팅: Casting) 이라고 함
			캐스팅 연산자 ()를 사용
			
			int intValue = 103029770;
			byte byteValue = (byte) intValue;
			
		- 강제 타입 변환은 데이터 손실이 있을 수 있으므로 주의해야 함
		- 정수를 실수로 변환할 때 정밀도 손실을 피해야 함
		
			int를 float으로 변환 후 다시 int로 변환하면 표현 범위 때문에 값 차이가 발생함
			double 타입으로 변환 시 정밀도 손실이 일어나지 않음
			
	3.3 연산식에서의 자동 타입 변환
	
		- 연산은 기본적으로 같은 타입의 피연산자(operand) 간에만 수행됨
		- 다른 타입의 피연산자가 있을 경우 두 피연산자 중 크기가 큰 타입으로 자동 변환된 후 연산을 수행함
		
		- 정수 연산일 경우 int 타입을 기본으로 함
			char 타입의 연산 결과는 int 타입으로 산출되므로 다시 문자로 출력하려면 int 결과값을 char 타입으로 강제 변환해야 함

----------------------------------------------------------------------------------------------------------------------------------------

확인 문제

1. 자바에서 변수에 대한 설명 중 틀린 것은 무엇입니까?

	1) 변수는 하나의 값만 저장할 수 있다.
	2) 변수는 선언 시에 사용한 타입의 값만 저장할 수 있다.
	3) 변수는 변수가 선언된 중괄호 {} 내에서만 사용 가능하다.
	4) 변수는 초기값이 저장되지 않은 상태에서 읽을 수 있다.
	
2. 변수 이름으로 사용 가능한 것을 모두 선택하세요.

	1) modelName
	2) class
	3) 6hour
	4) $value
	5) _age
	6) int
	
3. 다음 표의 빈칸에 자바의 기본 타입 8개를 적어보세요.

	크기/타입		1byte		2byte		4byte		8byte
	---------------------------------------------------------
	정수타입		(	A	)	(	B	)	(	C	)	(	D	)
							(	E	)
	---------------------------------------------------------
	실수타입								(	F	)	(	G	)
	---------------------------------------------------------
	논리타입		(	H	)
	
4. 다음 코드에서 타입, 변수 이름, 리터럴에 해당하는 것을 적어 보세요.

	int age;
	age = 10;
	double price = 3.14;
	
	타입 :	(		), (		)
	변수 이름 :	(		), (		)
	리터럴 :	(		), (		)
	
5. 자동 타입 변환에 대한 내용입니다. 컴파일 에러가 발생하는 것은 무엇입니까?

	byte byteValue = 10;
	char charValue = 'A';
	
	1) int intValue = byteValue;
	2) int intValue = charValue;
	3) short shortValue = charValue;
	4) double doubleValue = byteValue;
	
6. 강제 타입 변환(Casting)에 대한 내용입니다. 컴파일 에러가 발생하는 것은 무엇입니까?

	int intValue = 10;
	char charValue = 'A';
	double doubleValue = 5.7;
	String srtValue = "A";
	
	1) double var = (double) intValue;
	2) byte var = (byte) intValue;
	3) int var = (int) doubleValue;
	4) char var = (char) srtValue;
	
7. 변수를 잘못 초기화한 것은 무엇입니까?

	1) int var1 = 10;
	2) long var2 = 10000000000L;
	3) char var3 = '';
	4) double var4 = 10;
	5) float var5 = 10;
	
8. 연산식에서의 타입 변환 내용입니다. 컴파일 에러가 생기는 것은 무엇입니까?

	byte byteValue = 10;
	float floatValue = 2.5F;
	double doubleValue = 2.5;
	
	1) byte result = byteValue + byteValue;
	2) int result = 5 + byteValue;
	3) float result = 5 + floatValue;
	4) double result = 5 + doubleValue;
	
----------------------------------------------------------------------------------------------------------------------------------------

확인 문제 정답

1. 4)
2. 1), 4), 5)
3.	A - byte
	B - short
	C - int
	D - long
	E - char
	F - float
	G - double
	H - boolean
4. 	타입 : int, double
	변수 이름 : age, price
	리터럴 : 10, 3.14
5. 3)
6. 4)
7. 3)
8. 1)