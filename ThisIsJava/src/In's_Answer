package fintech;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.Scanner;

public class test {

       /* private static Account[] accountArray = new Account[100]; */
         private static Scanner scanner = new Scanner(System.in);
         static ArrayList<Account> accountList = new ArrayList<Account>();
         public static void main(String[] args) {
          
            boolean run = true;
            while (run) {
               System.out.println("----------------------------------------------");
               System.out.println("1. 계좌생성 | 2. 계좌목록 | 3. 예금 | 4. 출금 | 5. 종료");
               System.out.println("----------------------------------------------");
               System.out.print("선택 >");

               int selectNo = scanner.nextInt();

               if (selectNo == 1) {
                  createAccount();
               } else if (selectNo == 2) {
                  accountRead();
               } else if (selectNo == 3) {
                  deposit();
               } else if (selectNo == 4) {
                  withdraw();
               } else if (selectNo == 5) {
                  run = false;
               }
            }
            System.out.println("프로그램 종료");
         }

         // 계좌 생성하기
         private static void createAccount() {
               System.out.println("계좌번호 : ");
               String ano = scanner.next();
               
               System.out.println("계좌 주 : ");
               String owner = scanner.next();
               
               System.out.println("초기 금액 :");
               int balance = scanner.nextInt();
       
            accountList.add(new Account(ano,owner,balance));
         }

         // 계좌 목록보기
         private static void accountRead() {
            //배열 전체 출력
         for(Account a : accountList) {
            System.out.println( a.getAno()+" "+ a.getOwner()+" "+a.getBalance());
         }
         }

         // 예금하기
         private static void deposit() {
            System.out.println("예금계좌 : ");
               String findano = scanner.next();
             
               System.out.println("예금액 : ");
               int dep = scanner.nextInt();
              
           for(int i = 0;i<accountList.size();i++) {
            
              Account a = accountList.get(i);
              String realano = a.getAno();
              
              if(realano.equals(findano)) {
                 a.addDepo(dep);
                 System.out.println(a.getBalance());
                 
              }
           }
                       
            
         }

         // 출금하기
         private static void withdraw() {
            System.out.println("출금계좌 : ");
               String findano = scanner.next();
             
               System.out.println("출금액 : ");
               int dra = scanner.nextInt();
              
           for(int i = 0;i<accountList.size();i++) {
            
              Account a = accountList.get(i);
              String realano = a.getAno();
              
              if(realano.equals(findano)) {
                
                 a.mDra(dra);
                 System.out.println(a.getBalance());
                 
              }
           }
         }

         // Account 배열에서 ano와 동일한 Account 객체 찾기
         // 예금과 출금에서 호출해서 이용
         
         /*
          * private static Account findAccount(String ano) { // 작성 위치 //계좌 찾기
          * 
          * }
          */
         
      }